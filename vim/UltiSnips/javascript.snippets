# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
endsnippet
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
endsnippet
snippet f
	function(${1}) {${2}};
# if
endsnippet
snippet if
	if (${1:true}) {${2}}
# if ... else
endsnippet
snippet ife
	if (${1:true}) {${2}}
	else{${3}}
# tertiary conditional
endsnippet
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
endsnippet
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
endsnippet
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
endsnippet
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
endsnippet
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
endsnippet
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
endsnippet
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
endsnippet
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
endsnippet
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
endsnippet
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
endsnippet
snippet gett
	getElementBy${1:Id}('${2}')${3}
endsnippet
