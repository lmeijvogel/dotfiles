#!/usr/bin/env ruby

def main
  all_branches = `git for-each-ref | awk '{ print $3; }'`.each_line.map(&:strip).grep(%r[^refs/heads])

  non_master_branches = all_branches.reject {|branch| branch =~ %r[/master$] }
  merged_branches = non_master_branches.select {|branch| merged?(branch) }

  merged_relative_branches = merged_branches.map {|branch| branch.gsub(%r|^refs/heads/|, "") }

  if merged_relative_branches.none?
    puts "No merged branches"
    return
  end

  if confirm_deletion(merged_relative_branches)
    delete_branches(merged_relative_branches)

    puts "... Done"
  end
end

def confirm_deletion(branches)
  puts "Will delete:"
  branches.each do |branch|
    puts "- #{branch}"
  end

  puts "Delete? [yN]"

  gets.strip.downcase == "y"
end

def merged?(branch)
  stripped_branch_names = `git for-each-ref --contains #{branch}`.each_line
    .map {|line| line.strip.split[2] }

  stripped_branch_names.include?("refs/remotes/origin/master")
end

def delete_branches(branches)
  branches.each do |branch|
    `git branch -D #{branch}`
  end
end

main
